package com.example.one.controller;

import com.example.one.model.User;
import com.example.one.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.web.bind.annotation.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api")
@CrossOrigin(origins = "http://localhost:3000") 
public class UserController {

    @Autowired
    private UserRepository userRepository;

    @PostMapping("/register")
    public ResponseEntity<?> register(@RequestBody User user) {
        user.setPassword(new BCryptPasswordEncoder().encode(user.getPassword()));
        user.setRole("user");
        userRepository.save(user);
        return ResponseEntity.ok("User registered successfully");
    }

    @RestController
    @RequestMapping("/api")
    public class LoginController {

        @PostMapping("/login")
        public ResponseEntity<String> login(@RequestParam String username, @RequestParam String password) {
            // Add your login logic here
            // For demonstration purposes, let's assume any non-empty username and password is valid.
            
            if (username != null && !username.isEmpty() && password != null && !password.isEmpty()) {
                // Here you should authenticate the user
                // This is just a placeholder implementation
                return ResponseEntity.ok("Login successful");
            } else {
                return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Invalid credentials");
            }
        }
    }
}
